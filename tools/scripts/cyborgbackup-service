#!/bin/bash

# Default configured services
if [ -e /etc/debian_version ]; then
    CYBORGBACKUP_CONFIG="/etc/default/cyborgbackup"
else
    CYBORGBACKUP_CONFIG="/etc/sysconfig/cyborgbackup"
fi

# Load default configuration
[ -e "${CYBORGBACKUP_CONFIG}" ] && . "${CYBORGBACKUP_CONFIG}"

service_action() {
    SERVICES=$CYBORGBACKUP_SERVICES

    for svc in ${SERVICES}; do

        service ${svc} $1
        this_return=$?
        if [ $this_return -gt $worst_return ]; then
            worst_return=$this_return
        fi
        # Allow supervisor time to cleanup child pids (ubuntu only)
        if [[ ${svc} == supervisor* && ${1} == stop && -e /etc/debian_version ]]; then
            S_PID=$(pidof -x supervisord)
            echo "Waiting to allow supervisor time to cleanup ... pid ${S_PID}"
            if [ "${S_PID}" ]; then
                i=0
                while kill -0 "${S_PID}" 2> /dev/null; do
                    if [ $i = '60' ]; then
                        break;
                    else
                        if [ $i == '0' ]; then
                            echo -n " ... waiting"
                        else
                            echo -n "."
                        fi
                        i=$(($i+1))
                        sleep 1
                    fi
                done
            fi
        fi
    done
}

usage() {
    echo "CyBorgBackup service helper utility"
    echo "Usage: $0 {start|stop|restart|status}"
}

worst_return=0
case "$1" in
    help | -help | --help | -h)
        usage
        ;;
    start)
          echo "Starting CyBorgBackup"
          service_action start
          ;;
    stop)
        echo "Stopping CyBorgBackup"
        service_action stop
        ;;
    restart)
        echo "Restarting CyBorgBackup"
        service_action stop
        service_action start
        ;;
    status)
        echo "Showing CyBorgBackup Status"
        service_action status
        ;;
    *)
        usage
        worst_return=1
esac
exit $worst_return
